#pragma mode( separator(.,;) integer(h32) )
EXPORT Demo_Tetrahedron_P()
begin

  local points= {{0, 0, 0, 0}, {0, 0, 100, 0}, {0, 100, 0, 0}, {100, 50, 50, 0}, {0, 0, 0, 0}};   // Points List for our tetrahedron. Define >4 points so  definition does not appear to define a single point. 
  local triangles= {{1, 2, 3, #8080FF}, {1, 2, 4, #FFFF80}, {1, 3, 4, #80FF80}, {2, 3, 4, #FF8080}};   // Define triangles: a list of 3 points from the point list and a color 
  local lines={0,{1,2},{1,3},{1,4},{2,1},{2,3},{2,4},{3,1},{3,2},{3,4},{4,1},{4,2},{4,3}}; // Define black lines between all the points
  local rotmat= [[1, 0, 0, 160], [0, 1, 0, 120], [0, 0, 1, 0]];   // Initial rotation matrix. No rotation but translate to middle of screen   
  
  local saveangle = HAngle; //save the current HAngle setting
  HAngle:= 1; // deg mode
  dimgrob_p(G1, 320, 240);   // Create a graphic object of the same dimension as the screen 

  while 1 do   // forever (or until the user stops by pressing ON)   
   
    rect(G1);  // erase the grob
    local zclip= triangle_p(G1);    // create a blank zclipping string
    triangle_p(G1, points, triangles, {rotmat, "N"}, zclip);    // draw our transformed triangles
    line_p(G1, points, lines, {rotmat, "N"}, zclip);    // draw our transformed lines

    // depending on key pressed, rotate 5 degree in the appropriate direction
    if iskeydown(2) then // up
      rotmat:= rotmat*[[cos(5), sin(5), 0, 0], [-sin(5), cos(5), 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
    end;
    if iskeydown(12) then // down
      rotmat:= rotmat*[[cos(-5), sin(-5), 0, 0], [-sin(-5), cos(-5), 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]];
    end;
    if iskeydown(7) then // left
      rotmat:= rotmat*[[cos(5), 0, sin(5), 0], [0, 1, 0, 0], [-sin(5), 0, cos(5), 0], [0, 0, 0, 1]];
    end;
    if iskeydown(8) then // right
      rotmat:= rotmat*[[cos(-5), 0, sin(-5), 0], [0, 1, 0, 0], [-sin(-5), 0, cos(-5), 0], [0, 0, 0, 1]];
    end;

    blit_p(G1); // copy the background graphic on the screen
    wait(0.01); // small pause

  end;
  HAngle=saveangle; //restore the HAngle setting 
end;
